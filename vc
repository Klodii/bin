#!/bin/bash
source utils
SCRIPT_NAME=${0##*/}

function help {
   cat <<-HMESSAGE
[V]olume [C]ontrol
Use this command to raise/lower/mute/unmute your volume

Syntax: $SCRIPT_NAME [-hv] <arg1>
Options:
    -h     Print this help and exit.
    -v     Make more verbose the messages
HMESSAGE
}
DEBUG=':' # no-op, do nothing command


# -: is used to enable long arguments
while getopts "hv" option; do
    case $option in
        h )
            help
            exit 0;;
        v )
            DEBUG='echo';;
        \?)
            exit_w_error "Error: Invalid option";;
    esac
done
shift $((OPTIND -1)) # remove all options from $#

COMAND=$1
NUM="${2:-5}"
if is_installed pulsemixer; then
    $DEBUG "Using pulseaudio"
    function toggle { pulsemixer --toggle-mute ;}
    function mute { pulsemixer --mute ;}
    function up { pulsemixer --change-volume +"$NUM" ;}
    function down { pulsemixer --change-volume -"$NUM" ;}
else
    $DEBUG "Using amixer"
    function toggle { amixer sset Master toggle ;}
    function mute { amixer sset Master mute ; }
    function up { amixer sset Master "$NUM"%+ ; }
    function down { amixer sset Master "$NUM"%- ;}
fi


case "$COMAND" in
    toggle) toggle ;;
    mute) mute ;;
    up) up ;;
    down) down ;;
    *) notify-send "No command executed" -u critical -t 5000; exit 1 ;;
esac

if [ $(pulsemixer --get-mute) = 1 ]; then
    volume="Mute"
else
    volume=$(pulsemixer --get-volume | awk '{print int($1 * 100/150)"%"}')
fi

# notify-send "Volume $1 ($volume)"
dunstify -a "volume_control" -u low -r 9090 -h int:value:"$volume" -i "volume-$COMAND" "Volume: $volume" -t 2000

# update the statusbar, it expect to have 'statubar' script in your PATH
# update the signal of statusbar
# pkill -RTMIN+10 statusbar
