#!/usr/bin/env bash

export RED="\033[1;31m"
export YELLOW="\033[1;33m"
export NC="\033[0m" # No Color

function log_info {
    printf "${YELLOW}$1${NC}\n"
}
function log_error {
    printf "${RED}$1${NC}\n"
} >&2 # redirect to STDERR
function exit_w_error {
    log_error "$1" && exit 1
} >&2 # redirect to STDERR
function is_installed {
    # The function has a pure scope of information rather than to use.
    # Instead, use the `hash` command directly
    #
    # hash keeps the locations of recently executed programs and shows them whenever we want to see it.
    # It provides a complete pathname of each command name.
    #
    # When called with a command_name, it is searched for in the path environment variable,
    # and if found, is added to the list of remembered commands, and exits with
    # code 0, if not found exit with code 1.

    command_name=$1
    hash $command_name 2> /dev/null # redirect error messages
}

function current_os {
    OPERATNG_SYSTEM=$(uname -s)
    if [ $OPERATNG_SYSTEM = 'Darwin' ]; then
        echo 'macos'
    else
        if grep -q Microsoft /proc/version; then
            echo 'microsoft'
        else
            echo 'linux'
        fi
    fi
}

function log_info {
    printf "${YELLOW}$1${NC}\n"
}

function get_tmpdir {
    # normalize TMPDIR cross Linux, macOS
    case $(current_os) in
        'macos')
            # $TMPDIR returns a user tmp directory
            # /tmp or /private/tmp is a tmp directory accessable by all users
            # we choose to return the user tmp directory
            echo $TMPDIR
            ;;
        'linux')
            echo '/tmp'
            ;;
    esac
}

function is_local {
    # return true if in local machine
    domain=$(hostname -d)
    [ $domain = 'local' ]
}
