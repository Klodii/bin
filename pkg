#!/bin/bash
source utils

SCRIPT_NAME=${0##*/}  # performed a string manipulation operation to get the script name

function help {
cat <<-HMESSAGE
The command cluster different operations that can be done to the packages of the system.
The scripts is usefull because hides all the different commands of different Operating systems.

Syntax: $SCRIPT_NAME [-h] <checkupdates|upgrade> [<args>]

Options:
    -h  print this help and exit.

Subcommands:
    checkupdates  list all the packages that can be updated
    upgrade       upgrade all the packages
HMESSAGE
}

SUBCOMMAND="$1"
[ -z "$SUBCOMMAND" ] && { help; exit 1; }
[ "$SUBCOMMAND" = "-h" ] && { help;  exit 0; }

SCRIPT_DIR=$(cd "$(dirname "$0")" && pwd)
BASE_COMMAND_NAME='pkg'
COMMAND_FILE="${SCRIPT_DIR}/${BASE_COMMAND_NAME}_${SUBCOMMAND}"
if [ ! -f "$COMMAND_FILE" ]; then
    exit_w_error "Error: Unknown subcommand '$SUBCOMMAND'. File '$COMMAND_FILE' not found."
fi

shift # Move past the subcommand argument so getopts can process the flags

source "$COMMAND_FILE" "$@"
