#!/bin/bash
RED_FG=`tput setaf 1`
GREEN_FG=`tput setaf 2`
YELLOW_FG=`tput setaf 3`

NC=`tput sgr0`

search_text='breakpoint()|pdb.set_trace()'
echo "Searching $YELLOW_FG $search_text $NC occurences..."
occurences_count=$(git grep -E $search_text | wc -l)

if (($occurences_count>0));
then
    in_files=$(git grep -E $search_text)
    echo -e "${RED_FG}found $occurences_count occurences in the following files:\n$in_files"
    echo "COMMIT ABORTED"
    echo $NC
    exit 1
else
    echo "${GREEN_FG}No occurences founded"
    echo $NC
fi


# A quick method to ensure that all the merge markers are deleted
git diff --check

# Make sure that there is not 'wip' commit in the current branch commits
# I think that it is possible to have only one wip commit at a time, and
# is the last one, it can't be possible to create a more than one wip commit.
# Only the current commit can be a wip
DEFAULT_BRANCH = $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
git log $DEFAULT_BRANCH..HEAD | grep -q -i wip && { echo 'COMMIT ABORTED, found a wip in the branch commits'; exit 1; }
DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
git log $DEFAULT_BRANCH..HEAD | grep -q -i wip && { echo 'COMMIT ABORTED, found a wip in the branch commits'; exit 1; }

exit 0
