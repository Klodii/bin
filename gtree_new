#!/bin/bash -
source utils

ROOT_GIT_DIR=$(git rev-parse --show-toplevel)
WORKTREE_DIR=${ROOT_GIT_DIR%/*} # parent directory of the current git top-level directory

SCRIPT_NAME=${0##*/}  # performed a string manipulation operation to get the script name
help()
{
    # here-document used instead of echoing all lines
   cat <<-HMESSAGE
Create a Git Worktree.

You can define files to copy into the newly created worktree. This is useful
for including files that are in your .gitignore (e.g., .env files) and thus not
tracked by the repository

To do this, create a configuration file named "$WORKTREE_DIR/.gtreerc" with an
environment variable called FILE_TO_COPY. This variable should be a list of
file paths that you want copied into the new worktree.

This script is mainly designed to automate the copying of such files, saving
you from having to do it manually each time.

All worktree directories are created under: "$WORKTREE_DIR"
The configuration file must be located at: "$WORKTREE_DIR/.gtreerc"

Syntax: $SCRIPT_NAME [-hb] <branch> <directory name>
Options:
    -h --help     Print this help and exit.
    -b --branch   Create branch
HMESSAGE

}

CREATE_BRANCH=false
# Get the options
# -: is used to enable long arguments
while getopts "hb-:" option; do
    case $option in
        h )
            help
            exit 0;;
        b )
            CREATE_BRANCH=true;;
        - ) # Long arguments section
            case $OPTARG in
                help)
                    help
                    exit 0;;
                branch)
                    CREATE_BRANCH=true;;
            esac
            ;;
        \?)
            echo "Error: Invalid option"
            exit 1;;
    esac
done
shift $((OPTIND -1)) # remove all options from $#


[ -z "$1" ] && exit_w_error "Branch missing"
BRANCH=$1
NEW_WORKTREE="$WORKTREE_DIR/${2:-$BRANCH}"

if $CREATE_BRANCH; then
    git branch $BRANCH
    log_info "Created new branch"

    FULL_BRANCH_NAME=$(git branch -a | grep "^$BRANCH$"); \
    BRANCH_NAME=$(echo $FULL_BRANCH_NAME | sed 's@remotes/origin/@@'); \
    git checkout $BRANCH_NAME; \
fi

git worktree add $NEW_WORKTREE $BRANCH
[ $? != 0 ] && exit_w_error "Error while creating the worktree"

log_info "Created $NEW_WORKTREE worktree"
# check if the .gtreerc file is contained in WORKTREE_DIR
RC_FILE="$WORKTREE_DIR/.gtreerc"
if [ -f "$RC_FILE" ]; then
    log_info ".gtreerc file found: coping the files to the new tree."
    source "$RC_FILE"
    for file in "${FILE_TO_COPY[@]}"; do
        cp -v "$file" $NEW_WORKTREE
    done
else
    log_info "No .gtreerc file found, no file has been copied to the new tree."
fi

